EJERCICIO 1 ========================================================================================================================================
class program{
        delegate void Del1(int x);

        delegate void Del2(int[] x);
        delegate int Del3 (int x);

        delegate bool Del4(string st);
        static void Main(string[] args)
        {
            Del1 d1 = delegate (int x) {Console.WriteLine(x);};
            d1(10);

            Del2 d2 = x => Console.WriteLine(x.Length);
            d2(new int[] { 2, 4, 6, 8 });
            Del3 d3 = x =>
            {
                int sum = 0;
                for (int i = 1; i <= x; i++)
                {
                    sum += i;
                }
                return sum;
            };
            Console.WriteLine(d3(10));
            Del4 d4 = new Del4(LongitudPar); //se podria usar la forma reducida =LongitudPar
            Console.WriteLine(d4("hola mundo"));

            Console.ReadKey();
        }
            public static bool LongitudPar(string st)
            {
                 return st.Length % 2 == 0;
            }
 }
EJERCICIO 2 ========================================================================================================================================
delegate void AccionInt(ref int i);
class Program
{
        static void Main(string[] args)
        {
                AccionInt a1 = (ref int i) => i = i * 2;
                a1 += a1; //se encola uno tengo 2 delegates
                a1 += a1; //se encolan 2 y ya tengo 2 entonces ahora tengo 4
                a1 += a1; //se enconlan 4 a los 4 asi que ahora tengo 8
                int i = 1;
                Console.WriteLine(a1(ref i));  //2^8 = 256
                //tengo 8 delegates encolados
                // Responder respecto de este punto en el programa
                Console.ReadKey();
        }
}
EJERCICIO 3 ========================================================================================================================================

static void Main(string[] args)
            {
            int i = 10;
            Action a = delegate ()
            {
              Console.WriteLine(i);
            };

            a.Invoke();
            i = 20;
            a.Invoke();
            Console.ReadKey();
        }
        
        //se pasa una referencia de la variable
EJERCICIO 4 ========================================================================================================================================

        static void Main (String[] args)
            {
                
                Action[] acciones = new Action[10];
                for (int i = 0; i < 10; i++)
                {
                    acciones[i] = () => Console.WriteLine(i + " ");
                }
                foreach (var a in acciones)
                {
                    a.Invoke();
                }
                
                Console.ReadKey();
                   
            }
            //me va a imprimir diez veces 10 ya que el m√©todo se queda con la referencia de la variable i
EJERCICIO 5 ========================================================================================================================================
        class Program1
        {
            delegate bool AccionSeleccionar(int i);
            delegate int AccionAplicar(int i);
            delegate int AccionCombinar(int x, int y);
            static ArrayList listaAutos = new ArrayList();
            static void Main (String[] args)
            {
                
                ListaDeEnteros lista1 = new ListaDeEnteros();
                for (int i = 1; i <= 10; i++)
                {
                lista1.Agregar(i);
                }
                foreach (int i in lista1)
                {
                Console.Write(i + "-");
                }
                Console.WriteLine();
                ListaDeEnteros lista2 = lista1.Seleccionar(n => n % 2 == 0);
                ListaDeEnteros lista3 = lista2.Aplicar(n => n * 5);
                ListaDeEnteros lista4 = lista1.Seleccionar(n => n > 7).Aplicar(n => n + 10);
                ListaDeEnteros lista5 = ListaDeEnteros.Combinar(lista3, lista4, (x, y) => x + y);
                lista1.Imprimir();
                lista2.Imprimir();
                lista3.Imprimir();
                lista4.Imprimir();
                lista5.Imprimir();
                ListaDeEnteros.Combinar(lista5, lista3, (x, y) => x + 2 * y).Imprimir();
                
                Console.ReadKey();
            }

            class ListaDeEnteros : IEnumerable
            {
                ArrayList lista = new ArrayList();
                public void Agregar(int i) => lista.Add(i);
                public int Cantidad => lista.Count;
                
                public IEnumerator GetEnumerator()
                {
                    return lista.GetEnumerator(); //aprovechando que ArrayList ya implementa la interfaz
                }

                public void Imprimir()
                {
                    foreach(int i in lista)
                    {
                        Console.Write(i + " - ");
                    }
                    Console.WriteLine();
                }
                public ListaDeEnteros Seleccionar (AccionSeleccionar a)
                {
                    ListaDeEnteros listaNueva = new ListaDeEnteros();
                    foreach(int i in lista)
                    {
                        if(a(i))
                        {
                            listaNueva.Agregar(i);
                        }
                    }
                    return listaNueva;
                }
                public ListaDeEnteros Aplicar(AccionAplicar a)
                {
                    ListaDeEnteros listaNueva = new ListaDeEnteros();
                    foreach(int i in lista)
                    {
                        listaNueva.Agregar(a(i));
                    }
                    return listaNueva;
                }

                public static ListaDeEnteros Combinar(ListaDeEnteros l1, ListaDeEnteros l2,AccionCombinar a)
                {
                        ListaDeEnteros listaMasCorta,listaMasLarga;
                        ListaDeEnteros listaNueva=new ListaDeEnteros();
                        if(l1.Cantidad < l2.Cantidad)
                        {
                            listaMasCorta= l1;
                            listaMasLarga= l2;
                        }
                        else
                        {
                            listaMasCorta=l2;
                            listaMasLarga= l1; 
                        }

                        IEnumerator elistaLarga=listaMasLarga.GetEnumerator();
                        IEnumerator elistaCorta=listaMasCorta.GetEnumerator();
                        int i;
                        for(i=0;i<listaMasCorta.Cantidad;i++)
                        {   
                            elistaCorta.MoveNext();
                            elistaLarga.MoveNext();
                            listaNueva.Agregar(a((int)elistaCorta.Current,(int)elistaLarga.Current));
                            
                        }
                        for(int k=i;k<listaMasLarga.Cantidad;k++)
                        {
                            elistaLarga.MoveNext();
                            listaNueva.Agregar((int)elistaLarga.Current);
                        }
                        elistaCorta.Reset();
                        elistaLarga.Reset();
                        
                        return listaNueva;
                }

            }

            
            
        }
EJERCICIO 6 ========================================================================================================================================
EJERCICIO 7 ========================================================================================================================================
EJERCICIO 8 ========================================================================================================================================
EJERCICIO 9 ========================================================================================================================================
EJERCICIO 10 =======================================================================================================================================
EJERCICIO 11 =======================================================================================================================================
EJERCICIO  ========================================================================================================================================
EJERCICIO  ========================================================================================================================================
EJERCICIO  ========================================================================================================================================
EJERCICIO  ========================================================================================================================================
EJERCICIO  ========================================================================================================================================
EJERCICIO  ========================================================================================================================================
